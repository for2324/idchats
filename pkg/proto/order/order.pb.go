// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: order/order.proto

package pbOrder

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ForcedReplenishmentOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=Remark,proto3" json:"Remark,omitempty"`
}

func (x *ForcedReplenishmentOrderReq) Reset() {
	*x = ForcedReplenishmentOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForcedReplenishmentOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForcedReplenishmentOrderReq) ProtoMessage() {}

func (x *ForcedReplenishmentOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForcedReplenishmentOrderReq.ProtoReflect.Descriptor instead.
func (*ForcedReplenishmentOrderReq) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{0}
}

func (x *ForcedReplenishmentOrderReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ForcedReplenishmentOrderReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ForcedReplenishmentOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type ForcedReplenishmentOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *ForcedReplenishmentOrderResp) Reset() {
	*x = ForcedReplenishmentOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForcedReplenishmentOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForcedReplenishmentOrderResp) ProtoMessage() {}

func (x *ForcedReplenishmentOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForcedReplenishmentOrderResp.ProtoReflect.Descriptor instead.
func (*ForcedReplenishmentOrderResp) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{1}
}

func (x *ForcedReplenishmentOrderResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type ReplenishmentOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
	Remark      string `protobuf:"bytes,3,opt,name=Remark,proto3" json:"Remark,omitempty"`
	TxnHash     string `protobuf:"bytes,4,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
}

func (x *ReplenishmentOrderReq) Reset() {
	*x = ReplenishmentOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplenishmentOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplenishmentOrderReq) ProtoMessage() {}

func (x *ReplenishmentOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplenishmentOrderReq.ProtoReflect.Descriptor instead.
func (*ReplenishmentOrderReq) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{2}
}

func (x *ReplenishmentOrderReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *ReplenishmentOrderReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplenishmentOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ReplenishmentOrderReq) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

type ReplenishmentOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *ReplenishmentOrderResp) Reset() {
	*x = ReplenishmentOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplenishmentOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplenishmentOrderResp) ProtoMessage() {}

func (x *ReplenishmentOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplenishmentOrderResp.ProtoReflect.Descriptor instead.
func (*ReplenishmentOrderResp) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{3}
}

func (x *ReplenishmentOrderResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type GetPayScanBlockTaskByOrderIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	OrderId     string `protobuf:"bytes,2,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
}

func (x *GetPayScanBlockTaskByOrderIdReq) Reset() {
	*x = GetPayScanBlockTaskByOrderIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayScanBlockTaskByOrderIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayScanBlockTaskByOrderIdReq) ProtoMessage() {}

func (x *GetPayScanBlockTaskByOrderIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayScanBlockTaskByOrderIdReq.ProtoReflect.Descriptor instead.
func (*GetPayScanBlockTaskByOrderIdReq) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{4}
}

func (x *GetPayScanBlockTaskByOrderIdReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetPayScanBlockTaskByOrderIdReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetPayScanBlockTaskByOrderIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp   `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	ScanTaskInfo *ScanTaskInfo `protobuf:"bytes,2,opt,name=ScanTaskInfo,proto3" json:"ScanTaskInfo,omitempty"`
}

func (x *GetPayScanBlockTaskByOrderIdResp) Reset() {
	*x = GetPayScanBlockTaskByOrderIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayScanBlockTaskByOrderIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayScanBlockTaskByOrderIdResp) ProtoMessage() {}

func (x *GetPayScanBlockTaskByOrderIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayScanBlockTaskByOrderIdResp.ProtoReflect.Descriptor instead.
func (*GetPayScanBlockTaskByOrderIdResp) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{5}
}

func (x *GetPayScanBlockTaskByOrderIdResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetPayScanBlockTaskByOrderIdResp) GetScanTaskInfo() *ScanTaskInfo {
	if x != nil {
		return x.ScanTaskInfo
	}
	return nil
}

type GetPayScanBlockTaskByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *GetPayScanBlockTaskByIdReq) Reset() {
	*x = GetPayScanBlockTaskByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayScanBlockTaskByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayScanBlockTaskByIdReq) ProtoMessage() {}

func (x *GetPayScanBlockTaskByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayScanBlockTaskByIdReq.ProtoReflect.Descriptor instead.
func (*GetPayScanBlockTaskByIdReq) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{6}
}

func (x *GetPayScanBlockTaskByIdReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *GetPayScanBlockTaskByIdReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPayScanBlockTaskByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp   `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	ScanTaskInfo *ScanTaskInfo `protobuf:"bytes,2,opt,name=ScanTaskInfo,proto3" json:"ScanTaskInfo,omitempty"`
}

func (x *GetPayScanBlockTaskByIdResp) Reset() {
	*x = GetPayScanBlockTaskByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPayScanBlockTaskByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayScanBlockTaskByIdResp) ProtoMessage() {}

func (x *GetPayScanBlockTaskByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayScanBlockTaskByIdResp.ProtoReflect.Descriptor instead.
func (*GetPayScanBlockTaskByIdResp) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{7}
}

func (x *GetPayScanBlockTaskByIdResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *GetPayScanBlockTaskByIdResp) GetScanTaskInfo() *ScanTaskInfo {
	if x != nil {
		return x.ScanTaskInfo
	}
	return nil
}

type CreatePayScanBlockTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID       string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	USD               uint64 `protobuf:"varint,2,opt,name=USD,proto3" json:"USD,omitempty"`
	OrderId           string `protobuf:"bytes,3,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	FormAddress       string `protobuf:"bytes,4,opt,name=FormAddress,proto3" json:"FormAddress,omitempty"`
	TxnType           string `protobuf:"bytes,5,opt,name=TxnType,proto3" json:"TxnType,omitempty"`
	NotifyUrl         string `protobuf:"bytes,6,opt,name=NotifyUrl,proto3" json:"NotifyUrl,omitempty"`
	Mark              string `protobuf:"bytes,7,opt,name=Mark,proto3" json:"Mark,omitempty"`
	NotifyEncryptType string `protobuf:"bytes,8,opt,name=NotifyEncryptType,proto3" json:"NotifyEncryptType,omitempty"`
	NotifyEncryptKey  string `protobuf:"bytes,9,opt,name=NotifyEncryptKey,proto3" json:"NotifyEncryptKey,omitempty"`
	Attach            string `protobuf:"bytes,10,opt,name=Attach,proto3" json:"Attach,omitempty"`
}

func (x *CreatePayScanBlockTaskReq) Reset() {
	*x = CreatePayScanBlockTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayScanBlockTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayScanBlockTaskReq) ProtoMessage() {}

func (x *CreatePayScanBlockTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayScanBlockTaskReq.ProtoReflect.Descriptor instead.
func (*CreatePayScanBlockTaskReq) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePayScanBlockTaskReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetUSD() uint64 {
	if x != nil {
		return x.USD
	}
	return 0
}

func (x *CreatePayScanBlockTaskReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetFormAddress() string {
	if x != nil {
		return x.FormAddress
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetTxnType() string {
	if x != nil {
		return x.TxnType
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetNotifyEncryptType() string {
	if x != nil {
		return x.NotifyEncryptType
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetNotifyEncryptKey() string {
	if x != nil {
		return x.NotifyEncryptKey
	}
	return ""
}

func (x *CreatePayScanBlockTaskReq) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

type ScanTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FormAddress      string `protobuf:"bytes,2,opt,name=FormAddress,proto3" json:"FormAddress,omitempty"`
	ToAddress        string `protobuf:"bytes,3,opt,name=ToAddress,proto3" json:"ToAddress,omitempty"`
	TxnType          string `protobuf:"bytes,4,opt,name=TxnType,proto3" json:"TxnType,omitempty"`
	Value            string `protobuf:"bytes,5,opt,name=Value,proto3" json:"Value,omitempty"`
	Decimal          uint32 `protobuf:"varint,6,opt,name=Decimal,proto3" json:"Decimal,omitempty"`
	StartBlockNumber uint64 `protobuf:"varint,7,opt,name=StartBlockNumber,proto3" json:"StartBlockNumber,omitempty"`
	ScanBlockNumber  uint64 `protobuf:"varint,8,opt,name=ScanBlockNumber,proto3" json:"ScanBlockNumber,omitempty"`
	Rate             uint64 `protobuf:"varint,9,opt,name=Rate,proto3" json:"Rate,omitempty"`
	GasFee           uint64 `protobuf:"varint,10,opt,name=GasFee,proto3" json:"GasFee,omitempty"`
	Type             string `protobuf:"bytes,11,opt,name=Type,proto3" json:"Type,omitempty"`
	Status           int32  `protobuf:"varint,12,opt,name=Status,proto3" json:"Status,omitempty"`
	Tag              string `protobuf:"bytes,13,opt,name=Tag,proto3" json:"Tag,omitempty"`
	ChainId          int64  `protobuf:"varint,14,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	TxnHash          string `protobuf:"bytes,15,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	CreateTime       string `protobuf:"bytes,16,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	BlockStartTime   string `protobuf:"bytes,17,opt,name=BlockStartTime,proto3" json:"BlockStartTime,omitempty"`
	BlockExpireTime  string `protobuf:"bytes,18,opt,name=BlockExpireTime,proto3" json:"BlockExpireTime,omitempty"`
	OrderId          string `protobuf:"bytes,19,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	Mark             string `protobuf:"bytes,20,opt,name=Mark,proto3" json:"Mark,omitempty"`
	Ex               string `protobuf:"bytes,21,opt,name=Ex,proto3" json:"Ex,omitempty"`
	USDPrice         uint64 `protobuf:"varint,22,opt,name=USDPrice,proto3" json:"USDPrice,omitempty"`
	NotifyUrl        string `protobuf:"bytes,23,opt,name=NotifyUrl,proto3" json:"NotifyUrl,omitempty"`
}

func (x *ScanTaskInfo) Reset() {
	*x = ScanTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanTaskInfo) ProtoMessage() {}

func (x *ScanTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanTaskInfo.ProtoReflect.Descriptor instead.
func (*ScanTaskInfo) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{9}
}

func (x *ScanTaskInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ScanTaskInfo) GetFormAddress() string {
	if x != nil {
		return x.FormAddress
	}
	return ""
}

func (x *ScanTaskInfo) GetToAddress() string {
	if x != nil {
		return x.ToAddress
	}
	return ""
}

func (x *ScanTaskInfo) GetTxnType() string {
	if x != nil {
		return x.TxnType
	}
	return ""
}

func (x *ScanTaskInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ScanTaskInfo) GetDecimal() uint32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

func (x *ScanTaskInfo) GetStartBlockNumber() uint64 {
	if x != nil {
		return x.StartBlockNumber
	}
	return 0
}

func (x *ScanTaskInfo) GetScanBlockNumber() uint64 {
	if x != nil {
		return x.ScanBlockNumber
	}
	return 0
}

func (x *ScanTaskInfo) GetRate() uint64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *ScanTaskInfo) GetGasFee() uint64 {
	if x != nil {
		return x.GasFee
	}
	return 0
}

func (x *ScanTaskInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ScanTaskInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ScanTaskInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *ScanTaskInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ScanTaskInfo) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *ScanTaskInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ScanTaskInfo) GetBlockStartTime() string {
	if x != nil {
		return x.BlockStartTime
	}
	return ""
}

func (x *ScanTaskInfo) GetBlockExpireTime() string {
	if x != nil {
		return x.BlockExpireTime
	}
	return ""
}

func (x *ScanTaskInfo) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ScanTaskInfo) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *ScanTaskInfo) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *ScanTaskInfo) GetUSDPrice() uint64 {
	if x != nil {
		return x.USDPrice
	}
	return 0
}

func (x *ScanTaskInfo) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

type MsgDataToOrderByMQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID       string `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	USD               uint64 `protobuf:"varint,2,opt,name=USD,proto3" json:"USD,omitempty"`
	OrderId           string `protobuf:"bytes,3,opt,name=OrderId,proto3" json:"OrderId,omitempty"`
	UserId            string `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	TxnType           string `protobuf:"bytes,5,opt,name=TxnType,proto3" json:"TxnType,omitempty"`
	Mark              string `protobuf:"bytes,6,opt,name=Mark,proto3" json:"Mark,omitempty"`
	Value             string `protobuf:"bytes,7,opt,name=Value,proto3" json:"Value,omitempty"`
	Decimal           uint32 `protobuf:"varint,8,opt,name=Decimal,proto3" json:"Decimal,omitempty"`
	TxnHash           string `protobuf:"bytes,9,opt,name=TxnHash,proto3" json:"TxnHash,omitempty"`
	NotifyUrl         string `protobuf:"bytes,10,opt,name=NotifyUrl,proto3" json:"NotifyUrl,omitempty"`
	PayTime           string `protobuf:"bytes,11,opt,name=PayTime,proto3" json:"PayTime,omitempty"`
	ID                string `protobuf:"bytes,12,opt,name=ID,proto3" json:"ID,omitempty"`
	NotifyEncryptType string `protobuf:"bytes,13,opt,name=NotifyEncryptType,proto3" json:"NotifyEncryptType,omitempty"`
	NotifyEncryptKey  string `protobuf:"bytes,14,opt,name=NotifyEncryptKey,proto3" json:"NotifyEncryptKey,omitempty"`
	Attach            string `protobuf:"bytes,15,opt,name=Attach,proto3" json:"Attach,omitempty"`
	CreateTime        string `protobuf:"bytes,16,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *MsgDataToOrderByMQ) Reset() {
	*x = MsgDataToOrderByMQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDataToOrderByMQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDataToOrderByMQ) ProtoMessage() {}

func (x *MsgDataToOrderByMQ) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDataToOrderByMQ.ProtoReflect.Descriptor instead.
func (*MsgDataToOrderByMQ) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{10}
}

func (x *MsgDataToOrderByMQ) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetUSD() uint64 {
	if x != nil {
		return x.USD
	}
	return 0
}

func (x *MsgDataToOrderByMQ) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetTxnType() string {
	if x != nil {
		return x.TxnType
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetMark() string {
	if x != nil {
		return x.Mark
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetDecimal() uint32 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

func (x *MsgDataToOrderByMQ) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetPayTime() string {
	if x != nil {
		return x.PayTime
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetNotifyEncryptType() string {
	if x != nil {
		return x.NotifyEncryptType
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetNotifyEncryptKey() string {
	if x != nil {
		return x.NotifyEncryptKey
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *MsgDataToOrderByMQ) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type CreatePayScanBlockTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp   *CommonResp   `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	ScanTaskInfo *ScanTaskInfo `protobuf:"bytes,2,opt,name=ScanTaskInfo,proto3" json:"ScanTaskInfo,omitempty"`
}

func (x *CreatePayScanBlockTaskResp) Reset() {
	*x = CreatePayScanBlockTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePayScanBlockTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePayScanBlockTaskResp) ProtoMessage() {}

func (x *CreatePayScanBlockTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePayScanBlockTaskResp.ProtoReflect.Descriptor instead.
func (*CreatePayScanBlockTaskResp) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePayScanBlockTaskResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *CreatePayScanBlockTaskResp) GetScanTaskInfo() *ScanTaskInfo {
	if x != nil {
		return x.ScanTaskInfo
	}
	return nil
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_order_order_proto_rawDescGZIP(), []int{12}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

var File_order_order_proto protoreflect.FileDescriptor

var file_order_order_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x67, 0x0a, 0x1b, 0x46, 0x6f,
	0x72, 0x63, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x65, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x22, 0x51, 0x0a, 0x1c, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x65, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x7b, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6c, 0x65, 0x6e,
	0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e,
	0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x4b, 0x0a, 0x16, 0x52, 0x65, 0x70, 0x6c, 0x65, 0x6e, 0x69, 0x73, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x5d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x8e, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x63, 0x61, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64,
	0x22, 0x89, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xc9, 0x02, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x53, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x53, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x6d,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46,
	0x6f, 0x72, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x2c, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x22, 0x86, 0x05, 0x0a, 0x0c, 0x53, 0x63, 0x61,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x6f, 0x72,
	0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x46, 0x6f, 0x72, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x78, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x78, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x28, 0x0a, 0x0f, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x47,
	0x61, 0x73, 0x46, 0x65, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x54, 0x61, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x45, 0x78, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x45, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x53, 0x44, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x55, 0x53, 0x44, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72,
	0x6c, 0x22, 0xcc, 0x03, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x4d, 0x51, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x53,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x53, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x54, 0x78, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x54, 0x78, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54,
	0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2c,
	0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x53, 0x63,
	0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x31, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x0c, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x53, 0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x53,
	0x63, 0x61, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x32, 0xf8, 0x03, 0x0a, 0x0c,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x20, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x42,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x60, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x12, 0x21, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x53, 0x63, 0x61, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51,
	0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x65, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x65, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x65,
	0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x63, 0x0a, 0x18, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x65,
	0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x22, 0x2e,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x65, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x65, 0x6e, 0x69, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x42, 0x21, 0x5a, 0x1f, 0x4f, 0x70, 0x65, 0x6e, 0x5f, 0x49,
	0x4d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x3b, 0x70, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_order_order_proto_rawDescOnce sync.Once
	file_order_order_proto_rawDescData = file_order_order_proto_rawDesc
)

func file_order_order_proto_rawDescGZIP() []byte {
	file_order_order_proto_rawDescOnce.Do(func() {
		file_order_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_order_proto_rawDescData)
	})
	return file_order_order_proto_rawDescData
}

var file_order_order_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_order_order_proto_goTypes = []interface{}{
	(*ForcedReplenishmentOrderReq)(nil),      // 0: order.ForcedReplenishmentOrderReq
	(*ForcedReplenishmentOrderResp)(nil),     // 1: order.ForcedReplenishmentOrderResp
	(*ReplenishmentOrderReq)(nil),            // 2: order.ReplenishmentOrderReq
	(*ReplenishmentOrderResp)(nil),           // 3: order.ReplenishmentOrderResp
	(*GetPayScanBlockTaskByOrderIdReq)(nil),  // 4: order.GetPayScanBlockTaskByOrderIdReq
	(*GetPayScanBlockTaskByOrderIdResp)(nil), // 5: order.GetPayScanBlockTaskByOrderIdResp
	(*GetPayScanBlockTaskByIdReq)(nil),       // 6: order.GetPayScanBlockTaskByIdReq
	(*GetPayScanBlockTaskByIdResp)(nil),      // 7: order.GetPayScanBlockTaskByIdResp
	(*CreatePayScanBlockTaskReq)(nil),        // 8: order.CreatePayScanBlockTaskReq
	(*ScanTaskInfo)(nil),                     // 9: order.ScanTaskInfo
	(*MsgDataToOrderByMQ)(nil),               // 10: order.MsgDataToOrderByMQ
	(*CreatePayScanBlockTaskResp)(nil),       // 11: order.CreatePayScanBlockTaskResp
	(*CommonResp)(nil),                       // 12: order.CommonResp
}
var file_order_order_proto_depIdxs = []int32{
	12, // 0: order.ForcedReplenishmentOrderResp.CommonResp:type_name -> order.CommonResp
	12, // 1: order.ReplenishmentOrderResp.CommonResp:type_name -> order.CommonResp
	12, // 2: order.GetPayScanBlockTaskByOrderIdResp.CommonResp:type_name -> order.CommonResp
	9,  // 3: order.GetPayScanBlockTaskByOrderIdResp.ScanTaskInfo:type_name -> order.ScanTaskInfo
	12, // 4: order.GetPayScanBlockTaskByIdResp.CommonResp:type_name -> order.CommonResp
	9,  // 5: order.GetPayScanBlockTaskByIdResp.ScanTaskInfo:type_name -> order.ScanTaskInfo
	12, // 6: order.CreatePayScanBlockTaskResp.CommonResp:type_name -> order.CommonResp
	9,  // 7: order.CreatePayScanBlockTaskResp.ScanTaskInfo:type_name -> order.ScanTaskInfo
	8,  // 8: order.orderService.CreatePayScanBlockTask:input_type -> order.CreatePayScanBlockTaskReq
	4,  // 9: order.orderService.GetPayScanBlockTaskByOrderId:input_type -> order.GetPayScanBlockTaskByOrderIdReq
	6,  // 10: order.orderService.GetPayScanBlockTaskById:input_type -> order.GetPayScanBlockTaskByIdReq
	2,  // 11: order.orderService.ReplenishmentOrder:input_type -> order.ReplenishmentOrderReq
	0,  // 12: order.orderService.ForcedReplenishmentOrder:input_type -> order.ForcedReplenishmentOrderReq
	11, // 13: order.orderService.CreatePayScanBlockTask:output_type -> order.CreatePayScanBlockTaskResp
	5,  // 14: order.orderService.GetPayScanBlockTaskByOrderId:output_type -> order.GetPayScanBlockTaskByOrderIdResp
	7,  // 15: order.orderService.GetPayScanBlockTaskById:output_type -> order.GetPayScanBlockTaskByIdResp
	3,  // 16: order.orderService.ReplenishmentOrder:output_type -> order.ReplenishmentOrderResp
	1,  // 17: order.orderService.ForcedReplenishmentOrder:output_type -> order.ForcedReplenishmentOrderResp
	13, // [13:18] is the sub-list for method output_type
	8,  // [8:13] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_order_order_proto_init() }
func file_order_order_proto_init() {
	if File_order_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForcedReplenishmentOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForcedReplenishmentOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplenishmentOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplenishmentOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayScanBlockTaskByOrderIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayScanBlockTaskByOrderIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayScanBlockTaskByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPayScanBlockTaskByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePayScanBlockTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScanTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDataToOrderByMQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePayScanBlockTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_order_proto_goTypes,
		DependencyIndexes: file_order_order_proto_depIdxs,
		MessageInfos:      file_order_order_proto_msgTypes,
	}.Build()
	File_order_order_proto = out.File
	file_order_order_proto_rawDesc = nil
	file_order_order_proto_goTypes = nil
	file_order_order_proto_depIdxs = nil
}

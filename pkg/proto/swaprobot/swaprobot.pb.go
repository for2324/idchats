// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: swaprobot/swaprobot.proto

package swaprobot

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwapRecordInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperationID string `protobuf:"bytes,1,opt,name=operationID,proto3" json:"operationID,omitempty"`
	Method      string `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	UserID      string `protobuf:"bytes,3,opt,name=userID,proto3" json:"userID,omitempty"`
	Address     string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	FromSymbol  string `protobuf:"bytes,5,opt,name=fromSymbol,proto3" json:"fromSymbol,omitempty"`
	Amount      string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	ToSymbol    string `protobuf:"bytes,7,opt,name=toSymbol,proto3" json:"toSymbol,omitempty"`
	Tp          string `protobuf:"bytes,8,opt,name=tp,proto3" json:"tp,omitempty"`
	Sl          string `protobuf:"bytes,9,opt,name=sl,proto3" json:"sl,omitempty"`
	OrdID       string `protobuf:"bytes,10,opt,name=OrdID,proto3" json:"OrdID,omitempty"`
	MinimumOut  string `protobuf:"bytes,11,opt,name=minimumOut,proto3" json:"minimumOut,omitempty"`
	DeadlineDay string `protobuf:"bytes,12,opt,name=deadlineDay,proto3" json:"deadlineDay,omitempty"`
	OrdStatus   string `protobuf:"bytes,13,opt,name=ordStatus,proto3" json:"ordStatus,omitempty"`
	SearchBy    string `protobuf:"bytes,14,opt,name=searchBy,proto3" json:"searchBy,omitempty"`
}

func (x *SwapRecordInfoReq) Reset() {
	*x = SwapRecordInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapRecordInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRecordInfoReq) ProtoMessage() {}

func (x *SwapRecordInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRecordInfoReq.ProtoReflect.Descriptor instead.
func (*SwapRecordInfoReq) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{0}
}

func (x *SwapRecordInfoReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

func (x *SwapRecordInfoReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *SwapRecordInfoReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *SwapRecordInfoReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SwapRecordInfoReq) GetFromSymbol() string {
	if x != nil {
		return x.FromSymbol
	}
	return ""
}

func (x *SwapRecordInfoReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SwapRecordInfoReq) GetToSymbol() string {
	if x != nil {
		return x.ToSymbol
	}
	return ""
}

func (x *SwapRecordInfoReq) GetTp() string {
	if x != nil {
		return x.Tp
	}
	return ""
}

func (x *SwapRecordInfoReq) GetSl() string {
	if x != nil {
		return x.Sl
	}
	return ""
}

func (x *SwapRecordInfoReq) GetOrdID() string {
	if x != nil {
		return x.OrdID
	}
	return ""
}

func (x *SwapRecordInfoReq) GetMinimumOut() string {
	if x != nil {
		return x.MinimumOut
	}
	return ""
}

func (x *SwapRecordInfoReq) GetDeadlineDay() string {
	if x != nil {
		return x.DeadlineDay
	}
	return ""
}

func (x *SwapRecordInfoReq) GetOrdStatus() string {
	if x != nil {
		return x.OrdStatus
	}
	return ""
}

func (x *SwapRecordInfoReq) GetSearchBy() string {
	if x != nil {
		return x.SearchBy
	}
	return ""
}

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{1}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type SwapRobotOrderStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	OrderID    string `protobuf:"bytes,2,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
}

func (x *SwapRobotOrderStatusReq) Reset() {
	*x = SwapRobotOrderStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapRobotOrderStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRobotOrderStatusReq) ProtoMessage() {}

func (x *SwapRobotOrderStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRobotOrderStatusReq.ProtoReflect.Descriptor instead.
func (*SwapRobotOrderStatusReq) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{2}
}

func (x *SwapRobotOrderStatusReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *SwapRobotOrderStatusReq) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

type SwapRecordInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp         `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	OrderID    string              `protobuf:"bytes,2,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
	TaskList   []*TaskListResponse `protobuf:"bytes,3,rep,name=taskList,proto3" json:"taskList,omitempty"`
}

func (x *SwapRecordInfoResp) Reset() {
	*x = SwapRecordInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapRecordInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRecordInfoResp) ProtoMessage() {}

func (x *SwapRecordInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRecordInfoResp.ProtoReflect.Descriptor instead.
func (*SwapRecordInfoResp) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{3}
}

func (x *SwapRecordInfoResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *SwapRecordInfoResp) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *SwapRecordInfoResp) GetTaskList() []*TaskListResponse {
	if x != nil {
		return x.TaskList
	}
	return nil
}

type SwapRobotOrderStatusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *SwapRobotOrderStatusResp) Reset() {
	*x = SwapRobotOrderStatusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwapRobotOrderStatusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRobotOrderStatusResp) ProtoMessage() {}

func (x *SwapRobotOrderStatusResp) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRobotOrderStatusResp.ProtoReflect.Descriptor instead.
func (*SwapRobotOrderStatusResp) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{4}
}

func (x *SwapRobotOrderStatusResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

type TaskListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address            string      `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	TaskStartTimestamp string      `protobuf:"bytes,3,opt,name=taskStartTimestamp,proto3" json:"taskStartTimestamp,omitempty"`
	Method             string      `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	OrdId              string      `protobuf:"bytes,5,opt,name=ordId,proto3" json:"ordId,omitempty"`
	OrdStatus          string      `protobuf:"bytes,6,opt,name=ordStatus,proto3" json:"ordStatus,omitempty"`
	Params             *TaskParams `protobuf:"bytes,7,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *TaskListResponse) Reset() {
	*x = TaskListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListResponse) ProtoMessage() {}

func (x *TaskListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListResponse.ProtoReflect.Descriptor instead.
func (*TaskListResponse) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{5}
}

func (x *TaskListResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TaskListResponse) GetTaskStartTimestamp() string {
	if x != nil {
		return x.TaskStartTimestamp
	}
	return ""
}

func (x *TaskListResponse) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *TaskListResponse) GetOrdId() string {
	if x != nil {
		return x.OrdId
	}
	return ""
}

func (x *TaskListResponse) GetOrdStatus() string {
	if x != nil {
		return x.OrdStatus
	}
	return ""
}

func (x *TaskListResponse) GetParams() *TaskParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type TaskParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount      float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	DeadlineDay int32   `protobuf:"varint,2,opt,name=deadlineDay,proto3" json:"deadlineDay,omitempty"`
	FromSymbol  string  `protobuf:"bytes,3,opt,name=fromSymbol,proto3" json:"fromSymbol,omitempty"`
	MinimumOut  float64 `protobuf:"fixed64,4,opt,name=minimumOut,proto3" json:"minimumOut,omitempty"`
	Sl          float64 `protobuf:"fixed64,5,opt,name=sl,proto3" json:"sl,omitempty"`
	ToSymbol    string  `protobuf:"bytes,6,opt,name=toSymbol,proto3" json:"toSymbol,omitempty"`
	Tp          float64 `protobuf:"fixed64,7,opt,name=tp,proto3" json:"tp,omitempty"`
}

func (x *TaskParams) Reset() {
	*x = TaskParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskParams) ProtoMessage() {}

func (x *TaskParams) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskParams.ProtoReflect.Descriptor instead.
func (*TaskParams) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{6}
}

func (x *TaskParams) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TaskParams) GetDeadlineDay() int32 {
	if x != nil {
		return x.DeadlineDay
	}
	return 0
}

func (x *TaskParams) GetFromSymbol() string {
	if x != nil {
		return x.FromSymbol
	}
	return ""
}

func (x *TaskParams) GetMinimumOut() float64 {
	if x != nil {
		return x.MinimumOut
	}
	return 0
}

func (x *TaskParams) GetSl() float64 {
	if x != nil {
		return x.Sl
	}
	return 0
}

func (x *TaskParams) GetToSymbol() string {
	if x != nil {
		return x.ToSymbol
	}
	return ""
}

func (x *TaskParams) GetTp() float64 {
	if x != nil {
		return x.Tp
	}
	return 0
}

type BotOperationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorID string `protobuf:"bytes,1,opt,name=operatorID,proto3" json:"operatorID,omitempty"`
	Method     string `protobuf:"bytes,2,opt,name=Method,proto3" json:"Method,omitempty"`
	UserID     string `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Params     []byte `protobuf:"bytes,4,opt,name=Params,proto3" json:"Params,omitempty"`
	BiBotKey   string `protobuf:"bytes,5,opt,name=BiBotKey,proto3" json:"BiBotKey,omitempty"`
}

func (x *BotOperationReq) Reset() {
	*x = BotOperationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotOperationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotOperationReq) ProtoMessage() {}

func (x *BotOperationReq) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotOperationReq.ProtoReflect.Descriptor instead.
func (*BotOperationReq) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{7}
}

func (x *BotOperationReq) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *BotOperationReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *BotOperationReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BotOperationReq) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *BotOperationReq) GetBiBotKey() string {
	if x != nil {
		return x.BiBotKey
	}
	return ""
}

type BotOperationResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
	Data       []byte      `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *BotOperationResp) Reset() {
	*x = BotOperationResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotOperationResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotOperationResp) ProtoMessage() {}

func (x *BotOperationResp) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotOperationResp.ProtoReflect.Descriptor instead.
func (*BotOperationResp) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{8}
}

func (x *BotOperationResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *BotOperationResp) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BotSwapTradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskID         string `protobuf:"bytes,1,opt,name=taskID,proto3" json:"taskID,omitempty"`                 //某条任务
	UserID         string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`                 // 某个用户
	TradeVolumeUsd string `protobuf:"bytes,3,opt,name=tradeVolumeUsd,proto3" json:"tradeVolumeUsd,omitempty"` //该任务产生多少交易额（usdt）
	TradeNo        string `protobuf:"bytes,4,opt,name=tradeNo,proto3" json:"tradeNo,omitempty"`               //bibot产生的交易号 。
	FinishTime     string `protobuf:"bytes,5,opt,name=finishTime,proto3" json:"finishTime,omitempty"`         //交易完成的时间戳s
	TradeType      string `protobuf:"bytes,6,opt,name=tradeType,proto3" json:"tradeType,omitempty"`           //交易类型
	FeeUsdCost     string `protobuf:"bytes,7,opt,name=feeUsdCost,proto3" json:"feeUsdCost,omitempty"`         //交易产生的手续费U
	ApiKey         string `protobuf:"bytes,8,opt,name=apiKey,proto3" json:"apiKey,omitempty"`                 //是哪个apikey产生的。
}

func (x *BotSwapTradeReq) Reset() {
	*x = BotSwapTradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSwapTradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSwapTradeReq) ProtoMessage() {}

func (x *BotSwapTradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSwapTradeReq.ProtoReflect.Descriptor instead.
func (*BotSwapTradeReq) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{9}
}

func (x *BotSwapTradeReq) GetTaskID() string {
	if x != nil {
		return x.TaskID
	}
	return ""
}

func (x *BotSwapTradeReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BotSwapTradeReq) GetTradeVolumeUsd() string {
	if x != nil {
		return x.TradeVolumeUsd
	}
	return ""
}

func (x *BotSwapTradeReq) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *BotSwapTradeReq) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *BotSwapTradeReq) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *BotSwapTradeReq) GetFeeUsdCost() string {
	if x != nil {
		return x.FeeUsdCost
	}
	return ""
}

func (x *BotSwapTradeReq) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type BotSwapTradeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp,omitempty"`
}

func (x *BotSwapTradeResp) Reset() {
	*x = BotSwapTradeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_swaprobot_swaprobot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotSwapTradeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotSwapTradeResp) ProtoMessage() {}

func (x *BotSwapTradeResp) ProtoReflect() protoreflect.Message {
	mi := &file_swaprobot_swaprobot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotSwapTradeResp.ProtoReflect.Descriptor instead.
func (*BotSwapTradeResp) Descriptor() ([]byte, []int) {
	return file_swaprobot_swaprobot_proto_rawDescGZIP(), []int{10}
}

func (x *BotSwapTradeResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

var File_swaprobot_swaprobot_proto protoreflect.FileDescriptor

var file_swaprobot_swaprobot_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2f, 0x73, 0x77, 0x61, 0x70,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x77, 0x61,
	0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x22, 0x85, 0x03, 0x0a, 0x11, 0x53, 0x77, 0x61, 0x70, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x73, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4f, 0x72, 0x64,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x75, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79, 0x22, 0x3e,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x53,
	0x0a, 0x17, 0x53, 0x77, 0x61, 0x70, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x53, 0x77, 0x61, 0x70, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x08, 0x74,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a, 0x18, 0x53, 0x77, 0x61, 0x70, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0xd7, 0x01, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x64,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x73, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x70, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x02, 0x74, 0x70, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x42, 0x6f, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x69, 0x42, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x69, 0x42, 0x6f, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x5d,
	0x0a, 0x10, 0x42, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xf9, 0x01,
	0x0a, 0x0f, 0x42, 0x6f, 0x74, 0x53, 0x77, 0x61, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x55, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x73, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x4e, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x55, 0x73, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x65, 0x55, 0x73, 0x64, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x49, 0x0a, 0x10, 0x42, 0x6f, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a,
	0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xa6, 0x01, 0x0a, 0x09, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x42, 0x6f, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x42,
	0x6f, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1b,
	0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x15, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x2e, 0x42, 0x6f, 0x74, 0x53, 0x77, 0x61, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1b, 0x2e, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x42, 0x6f, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x27, 0x5a,
	0x25, 0x4f, 0x70, 0x65, 0x6e, 0x5f, 0x49, 0x4d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x77, 0x61, 0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x3b, 0x73, 0x77, 0x61,
	0x70, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_swaprobot_swaprobot_proto_rawDescOnce sync.Once
	file_swaprobot_swaprobot_proto_rawDescData = file_swaprobot_swaprobot_proto_rawDesc
)

func file_swaprobot_swaprobot_proto_rawDescGZIP() []byte {
	file_swaprobot_swaprobot_proto_rawDescOnce.Do(func() {
		file_swaprobot_swaprobot_proto_rawDescData = protoimpl.X.CompressGZIP(file_swaprobot_swaprobot_proto_rawDescData)
	})
	return file_swaprobot_swaprobot_proto_rawDescData
}

var file_swaprobot_swaprobot_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_swaprobot_swaprobot_proto_goTypes = []interface{}{
	(*SwapRecordInfoReq)(nil),        // 0: swaprobot.SwapRecordInfoReq
	(*CommonResp)(nil),               // 1: swaprobot.CommonResp
	(*SwapRobotOrderStatusReq)(nil),  // 2: swaprobot.SwapRobotOrderStatusReq
	(*SwapRecordInfoResp)(nil),       // 3: swaprobot.SwapRecordInfoResp
	(*SwapRobotOrderStatusResp)(nil), // 4: swaprobot.SwapRobotOrderStatusResp
	(*TaskListResponse)(nil),         // 5: swaprobot.TaskListResponse
	(*TaskParams)(nil),               // 6: swaprobot.TaskParams
	(*BotOperationReq)(nil),          // 7: swaprobot.BotOperationReq
	(*BotOperationResp)(nil),         // 8: swaprobot.BotOperationResp
	(*BotSwapTradeReq)(nil),          // 9: swaprobot.BotSwapTradeReq
	(*BotSwapTradeResp)(nil),         // 10: swaprobot.BotSwapTradeResp
}
var file_swaprobot_swaprobot_proto_depIdxs = []int32{
	1,  // 0: swaprobot.SwapRecordInfoResp.CommonResp:type_name -> swaprobot.CommonResp
	5,  // 1: swaprobot.SwapRecordInfoResp.taskList:type_name -> swaprobot.TaskListResponse
	1,  // 2: swaprobot.SwapRobotOrderStatusResp.CommonResp:type_name -> swaprobot.CommonResp
	6,  // 3: swaprobot.TaskListResponse.params:type_name -> swaprobot.TaskParams
	1,  // 4: swaprobot.BotOperationResp.CommonResp:type_name -> swaprobot.CommonResp
	1,  // 5: swaprobot.BotSwapTradeResp.CommonResp:type_name -> swaprobot.CommonResp
	7,  // 6: swaprobot.swaprobot.BotOperation:input_type -> swaprobot.BotOperationReq
	9,  // 7: swaprobot.swaprobot.FinishTaskToGetReword:input_type -> swaprobot.BotSwapTradeReq
	8,  // 8: swaprobot.swaprobot.BotOperation:output_type -> swaprobot.BotOperationResp
	10, // 9: swaprobot.swaprobot.FinishTaskToGetReword:output_type -> swaprobot.BotSwapTradeResp
	8,  // [8:10] is the sub-list for method output_type
	6,  // [6:8] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_swaprobot_swaprobot_proto_init() }
func file_swaprobot_swaprobot_proto_init() {
	if File_swaprobot_swaprobot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_swaprobot_swaprobot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapRecordInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapRobotOrderStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapRecordInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwapRobotOrderStatusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotOperationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotOperationResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSwapTradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_swaprobot_swaprobot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotSwapTradeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_swaprobot_swaprobot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_swaprobot_swaprobot_proto_goTypes,
		DependencyIndexes: file_swaprobot_swaprobot_proto_depIdxs,
		MessageInfos:      file_swaprobot_swaprobot_proto_msgTypes,
	}.Build()
	File_swaprobot_swaprobot_proto = out.File
	file_swaprobot_swaprobot_proto_rawDesc = nil
	file_swaprobot_swaprobot_proto_goTypes = nil
	file_swaprobot_swaprobot_proto_depIdxs = nil
}

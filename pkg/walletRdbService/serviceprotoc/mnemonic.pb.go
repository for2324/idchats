// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: protoc/mnemonic.proto

package serviceprotoc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateWalletMnemonicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 生成祖籍次
	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Mnemonic string    `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *CreateWalletMnemonicResp) Reset() {
	*x = CreateWalletMnemonicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletMnemonicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletMnemonicResp) ProtoMessage() {}

func (x *CreateWalletMnemonicResp) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletMnemonicResp.ProtoReflect.Descriptor instead.
func (*CreateWalletMnemonicResp) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWalletMnemonicResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *CreateWalletMnemonicResp) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

type CreateWalletMnemonicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CreateAt string `protobuf:"bytes,2,opt,name=createAt,proto3" json:"createAt,omitempty"`
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Ex       string `protobuf:"bytes,5,opt,name=ex,proto3" json:"ex,omitempty"`
	FeeRate  int32  `protobuf:"varint,6,opt,name=feeRate,proto3" json:"feeRate,omitempty"`
	Sign     string `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *CreateWalletMnemonicReq) Reset() {
	*x = CreateWalletMnemonicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWalletMnemonicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWalletMnemonicReq) ProtoMessage() {}

func (x *CreateWalletMnemonicReq) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWalletMnemonicReq.ProtoReflect.Descriptor instead.
func (*CreateWalletMnemonicReq) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{1}
}

func (x *CreateWalletMnemonicReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateWalletMnemonicReq) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *CreateWalletMnemonicReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateWalletMnemonicReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *CreateWalletMnemonicReq) GetFeeRate() int32 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

func (x *CreateWalletMnemonicReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type BaseResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`      //状态码
	StatusMessage string `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"` //状态描述
	ServiceTime   int64  `protobuf:"varint,3,opt,name=serviceTime,proto3" json:"serviceTime,omitempty"`    //服务时间
}

func (x *BaseResp) Reset() {
	*x = BaseResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResp) ProtoMessage() {}

func (x *BaseResp) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResp.ProtoReflect.Descriptor instead.
func (*BaseResp) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{2}
}

func (x *BaseResp) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *BaseResp) GetStatusMessage() string {
	if x != nil {
		return x.StatusMessage
	}
	return ""
}

func (x *BaseResp) GetServiceTime() int64 {
	if x != nil {
		return x.ServiceTime
	}
	return 0
}

type UserRobotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *UserRobotResp) Reset() {
	*x = UserRobotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRobotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRobotResp) ProtoMessage() {}

func (x *UserRobotResp) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRobotResp.ProtoReflect.Descriptor instead.
func (*UserRobotResp) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{3}
}

func (x *UserRobotResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type Ceshi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hello string `protobuf:"bytes,1,opt,name=hello,proto3" json:"hello,omitempty"`
}

func (x *Ceshi) Reset() {
	*x = Ceshi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ceshi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ceshi) ProtoMessage() {}

func (x *Ceshi) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ceshi.ProtoReflect.Descriptor instead.
func (*Ceshi) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{4}
}

func (x *Ceshi) GetHello() string {
	if x != nil {
		return x.Hello
	}
	return ""
}

type RequestUserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Sign   string `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *RequestUserID) Reset() {
	*x = RequestUserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserID) ProtoMessage() {}

func (x *RequestUserID) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserID.ProtoReflect.Descriptor instead.
func (*RequestUserID) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{5}
}

func (x *RequestUserID) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *RequestUserID) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type CheckIsNeedSign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *CheckIsNeedSign) Reset() {
	*x = CheckIsNeedSign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIsNeedSign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIsNeedSign) ProtoMessage() {}

func (x *CheckIsNeedSign) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIsNeedSign.ProtoReflect.Descriptor instead.
func (*CheckIsNeedSign) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{6}
}

func (x *CheckIsNeedSign) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type CheckIsNeedSignResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp   *BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	IsNeedSign bool      `protobuf:"varint,2,opt,name=IsNeedSign,proto3" json:"IsNeedSign,omitempty"`
}

func (x *CheckIsNeedSignResp) Reset() {
	*x = CheckIsNeedSignResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIsNeedSignResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIsNeedSignResp) ProtoMessage() {}

func (x *CheckIsNeedSignResp) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIsNeedSignResp.ProtoReflect.Descriptor instead.
func (*CheckIsNeedSignResp) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{7}
}

func (x *CheckIsNeedSignResp) GetBaseResp() *BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *CheckIsNeedSignResp) GetIsNeedSign() bool {
	if x != nil {
		return x.IsNeedSign
	}
	return false
}

type ImportWalletMnemonicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   string `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CreateAt string `protobuf:"bytes,2,opt,name=createAt,proto3" json:"createAt,omitempty"`
	Status   int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Ex       string `protobuf:"bytes,5,opt,name=ex,proto3" json:"ex,omitempty"`
	FeeRate  int32  `protobuf:"varint,6,opt,name=feeRate,proto3" json:"feeRate,omitempty"`
	Sign     string `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	Mnemonic string `protobuf:"bytes,8,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	S        string `protobuf:"bytes,9,opt,name=s,proto3" json:"s,omitempty"`
	I        string `protobuf:"bytes,10,opt,name=i,proto3" json:"i,omitempty"`
	C        string `protobuf:"bytes,11,opt,name=c,proto3" json:"c,omitempty"`
}

func (x *ImportWalletMnemonicReq) Reset() {
	*x = ImportWalletMnemonicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoc_mnemonic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportWalletMnemonicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportWalletMnemonicReq) ProtoMessage() {}

func (x *ImportWalletMnemonicReq) ProtoReflect() protoreflect.Message {
	mi := &file_protoc_mnemonic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportWalletMnemonicReq.ProtoReflect.Descriptor instead.
func (*ImportWalletMnemonicReq) Descriptor() ([]byte, []int) {
	return file_protoc_mnemonic_proto_rawDescGZIP(), []int{8}
}

func (x *ImportWalletMnemonicReq) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ImportWalletMnemonicReq) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *ImportWalletMnemonicReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ImportWalletMnemonicReq) GetEx() string {
	if x != nil {
		return x.Ex
	}
	return ""
}

func (x *ImportWalletMnemonicReq) GetFeeRate() int32 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

func (x *ImportWalletMnemonicReq) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *ImportWalletMnemonicReq) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *ImportWalletMnemonicReq) GetS() string {
	if x != nil {
		return x.S
	}
	return ""
}

func (x *ImportWalletMnemonicReq) GetI() string {
	if x != nil {
		return x.I
	}
	return ""
}

func (x *ImportWalletMnemonicReq) GetC() string {
	if x != nil {
		return x.C
	}
	return ""
}

var File_protoc_mnemonic_proto protoreflect.FileDescriptor

var file_protoc_mnemonic_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x6d, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x72, 0x0a,
	0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x46, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x35, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x0a, 0x05, 0x43, 0x65, 0x73,
	0x68, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x22, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73,
	0x4e, 0x65, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x6c, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x22, 0xe9,
	0x01, 0x0a, 0x17, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x67, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x0c,
	0x0a, 0x01, 0x69, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x69, 0x12, 0x0c, 0x0a, 0x01,
	0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x63, 0x32, 0xe9, 0x05, 0x0a, 0x10, 0x53,
	0x77, 0x61, 0x70, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x66, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f,
	0x6e, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x1e, 0x2e, 0x6d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x11, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x73, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x20, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x1a, 0x24, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4e, 0x65, 0x65, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1e, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x29, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x62, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x46, 0x72, 0x6f, 0x6d, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x6d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x29, 0x2e, 0x6d, 0x6e, 0x65,
	0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x50, 0x0a, 0x0e, 0x52, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x4d,
	0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1e, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x1e, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x54, 0x65, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x65, 0x73, 0x68,
	0x69, 0x1a, 0x1e, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x63, 0x0a, 0x0c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x28, 0x2e, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x6d, 0x6e,
	0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x3b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_protoc_mnemonic_proto_rawDescOnce sync.Once
	file_protoc_mnemonic_proto_rawDescData = file_protoc_mnemonic_proto_rawDesc
)

func file_protoc_mnemonic_proto_rawDescGZIP() []byte {
	file_protoc_mnemonic_proto_rawDescOnce.Do(func() {
		file_protoc_mnemonic_proto_rawDescData = protoimpl.X.CompressGZIP(file_protoc_mnemonic_proto_rawDescData)
	})
	return file_protoc_mnemonic_proto_rawDescData
}

var file_protoc_mnemonic_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protoc_mnemonic_proto_goTypes = []interface{}{
	(*CreateWalletMnemonicResp)(nil), // 0: mnemonicService.CreateWalletMnemonicResp
	(*CreateWalletMnemonicReq)(nil),  // 1: mnemonicService.CreateWalletMnemonicReq
	(*BaseResp)(nil),                 // 2: mnemonicService.BaseResp
	(*UserRobotResp)(nil),            // 3: mnemonicService.UserRobotResp
	(*Ceshi)(nil),                    // 4: mnemonicService.Ceshi
	(*RequestUserID)(nil),            // 5: mnemonicService.RequestUserID
	(*CheckIsNeedSign)(nil),          // 6: mnemonicService.CheckIsNeedSign
	(*CheckIsNeedSignResp)(nil),      // 7: mnemonicService.CheckIsNeedSignResp
	(*ImportWalletMnemonicReq)(nil),  // 8: mnemonicService.ImportWalletMnemonicReq
}
var file_protoc_mnemonic_proto_depIdxs = []int32{
	2,  // 0: mnemonicService.CreateWalletMnemonicResp.baseResp:type_name -> mnemonicService.BaseResp
	2,  // 1: mnemonicService.UserRobotResp.baseResp:type_name -> mnemonicService.BaseResp
	2,  // 2: mnemonicService.CheckIsNeedSignResp.baseResp:type_name -> mnemonicService.BaseResp
	1,  // 3: mnemonicService.SwapRobotService.CreateUserRobot:input_type -> mnemonicService.CreateWalletMnemonicReq
	5,  // 4: mnemonicService.SwapRobotService.DeleteUserRobot:input_type -> mnemonicService.RequestUserID
	6,  // 5: mnemonicService.SwapRobotService.CheckIsExpireTime:input_type -> mnemonicService.CheckIsNeedSign
	5,  // 6: mnemonicService.SwapRobotService.GetMnemonic:input_type -> mnemonicService.RequestUserID
	5,  // 7: mnemonicService.SwapRobotService.GetMnemonicFromMemory:input_type -> mnemonicService.RequestUserID
	5,  // 8: mnemonicService.SwapRobotService.ReloadMnemonic:input_type -> mnemonicService.RequestUserID
	4,  // 9: mnemonicService.SwapRobotService.HelloWorldTest:input_type -> mnemonicService.Ceshi
	8,  // 10: mnemonicService.SwapRobotService.ImportWallet:input_type -> mnemonicService.ImportWalletMnemonicReq
	0,  // 11: mnemonicService.SwapRobotService.CreateUserRobot:output_type -> mnemonicService.CreateWalletMnemonicResp
	3,  // 12: mnemonicService.SwapRobotService.DeleteUserRobot:output_type -> mnemonicService.UserRobotResp
	7,  // 13: mnemonicService.SwapRobotService.CheckIsExpireTime:output_type -> mnemonicService.CheckIsNeedSignResp
	0,  // 14: mnemonicService.SwapRobotService.GetMnemonic:output_type -> mnemonicService.CreateWalletMnemonicResp
	0,  // 15: mnemonicService.SwapRobotService.GetMnemonicFromMemory:output_type -> mnemonicService.CreateWalletMnemonicResp
	3,  // 16: mnemonicService.SwapRobotService.ReloadMnemonic:output_type -> mnemonicService.UserRobotResp
	3,  // 17: mnemonicService.SwapRobotService.HelloWorldTest:output_type -> mnemonicService.UserRobotResp
	0,  // 18: mnemonicService.SwapRobotService.ImportWallet:output_type -> mnemonicService.CreateWalletMnemonicResp
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_protoc_mnemonic_proto_init() }
func file_protoc_mnemonic_proto_init() {
	if File_protoc_mnemonic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protoc_mnemonic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletMnemonicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWalletMnemonicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRobotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ceshi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIsNeedSign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIsNeedSignResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoc_mnemonic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportWalletMnemonicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protoc_mnemonic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protoc_mnemonic_proto_goTypes,
		DependencyIndexes: file_protoc_mnemonic_proto_depIdxs,
		MessageInfos:      file_protoc_mnemonic_proto_msgTypes,
	}.Build()
	File_protoc_mnemonic_proto = out.File
	file_protoc_mnemonic_proto_rawDesc = nil
	file_protoc_mnemonic_proto_goTypes = nil
	file_protoc_mnemonic_proto_depIdxs = nil
}
